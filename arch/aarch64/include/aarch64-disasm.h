#ifndef __aarch64_DISASM_H__
#define __aarch64_DISASM_H__
#include <define.h>
#include <disasm.h>
#include <aarch64-decode.h>
namespace captive 
{
  namespace arch 
  {
    namespace aarch64 
    {
      class aarch64_disasm : public Disasm 
      {
        public:
        const char *disassemble(uint64_t pc, const uint8_t *data) override;
        private:
        static const char *_map_a64_arrg[];
        static const char *_map_a64_breg[];
        static const char *_map_a64_cond[];
        static const char *_map_a64_dreg[];
        static const char *_map_a64_exttype32[];
        static const char *_map_a64_exttype64[];
        static const char *_map_a64_hreg[];
        static const char *_map_a64_invcond[];
        static const char *_map_a64_nzcvbits[];
        static const char *_map_a64_qreg[];
        static const char *_map_a64_regsw[];
        static const char *_map_a64_regsx[];
        static const char *_map_a64_regw[];
        static const char *_map_a64_regx[];
        static const char *_map_a64_shifttype[];
        static const char *_map_a64_sreg[];
        static const char *_map_a64_vreg[];
        void disassemble_a64_abs_simd(uint64_t, const aarch64_decode_a64_SIMD_TWO_REG_MISC&);
        void disassemble_a64_adc(uint64_t, const aarch64_decode_a64_ADD_SUB_CARRY&);
        void disassemble_a64_add_ereg(uint64_t, const aarch64_decode_a64_ADD_SUB_EREG&);
        void disassemble_a64_add_sreg(uint64_t, const aarch64_decode_a64_ADD_SUB_SREG&);
        void disassemble_a64_add_vector(uint64_t, const aarch64_decode_a64_SIMD_THREE_SAME&);
        void disassemble_a64_addi(uint64_t, const aarch64_decode_a64_ADD_SUB_IMM&);
        void disassemble_a64_addp_scalar(uint64_t, const aarch64_decode_a64_SIMD_SCALAR_PW&);
        void disassemble_a64_addp_vector(uint64_t, const aarch64_decode_a64_SIMD_THREE_SAME&);
        void disassemble_a64_addv(uint64_t, const aarch64_decode_a64_SIMD_ACROSS_LANES&);
        void disassemble_a64_adr(uint64_t, const aarch64_decode_a64_PC_REL&);
        void disassemble_a64_and_vector(uint64_t, const aarch64_decode_a64_SIMD_THREE_SAME&);
        void disassemble_a64_andi(uint64_t, const aarch64_decode_a64_LOGICAL_IMM&);
        void disassemble_a64_andsr(uint64_t, const aarch64_decode_a64_LOGICAL_SR&);
        void disassemble_a64_asrv(uint64_t, const aarch64_decode_a64_DP_2S&);
        void disassemble_a64_b(uint64_t, const aarch64_decode_a64_UB_IMM&);
        void disassemble_a64_barrier(uint64_t, const aarch64_decode_a64_SYSTEM&);
        void disassemble_a64_bcond(uint64_t, const aarch64_decode_a64_COND_B_IMM&);
        void disassemble_a64_bfm(uint64_t, const aarch64_decode_a64_BITFIELD&);
        void disassemble_a64_bic_vector(uint64_t, const aarch64_decode_a64_SIMD_THREE_SAME&);
        void disassemble_a64_bici(uint64_t, const aarch64_decode_a64_SIMD_MOD_IMM&);
        void disassemble_a64_bicsr(uint64_t, const aarch64_decode_a64_LOGICAL_SR&);
        void disassemble_a64_bif(uint64_t, const aarch64_decode_a64_SIMD_THREE_SAME&);
        void disassemble_a64_bit(uint64_t, const aarch64_decode_a64_SIMD_THREE_SAME&);
        void disassemble_a64_br(uint64_t, const aarch64_decode_a64_UB_REG&);
        void disassemble_a64_bsl(uint64_t, const aarch64_decode_a64_SIMD_THREE_SAME&);
        void disassemble_a64_cbz(uint64_t, const aarch64_decode_a64_CMP_B_IMM&);
        void disassemble_a64_ccmni(uint64_t, const aarch64_decode_a64_COND_CMP_IMM&);
        void disassemble_a64_ccmnr(uint64_t, const aarch64_decode_a64_COND_CMP_REG&);
        void disassemble_a64_ccmpi(uint64_t, const aarch64_decode_a64_COND_CMP_IMM&);
        void disassemble_a64_ccmpr(uint64_t, const aarch64_decode_a64_COND_CMP_REG&);
        void disassemble_a64_clrex(uint64_t, const aarch64_decode_a64_SYSTEM&);
        void disassemble_a64_cls(uint64_t, const aarch64_decode_a64_DP_1S&);
        void disassemble_a64_clz(uint64_t, const aarch64_decode_a64_DP_1S&);
        void disassemble_a64_cmeq_reg(uint64_t, const aarch64_decode_a64_SIMD_THREE_SAME&);
        void disassemble_a64_cmeq_zero(uint64_t, const aarch64_decode_a64_SIMD_TWO_REG_MISC&);
        void disassemble_a64_cmge_zero(uint64_t, const aarch64_decode_a64_SIMD_TWO_REG_MISC&);
        void disassemble_a64_cmhi_reg(uint64_t, const aarch64_decode_a64_SIMD_THREE_SAME&);
        void disassemble_a64_cmlt_zero(uint64_t, const aarch64_decode_a64_SIMD_TWO_REG_MISC&);
        void disassemble_a64_cmtst(uint64_t, const aarch64_decode_a64_SIMD_THREE_SAME&);
        void disassemble_a64_cnt(uint64_t, const aarch64_decode_a64_SIMD_TWO_REG_MISC&);
        void disassemble_a64_crc32(uint64_t, const aarch64_decode_a64_DP_2S&);
        void disassemble_a64_crc32c(uint64_t, const aarch64_decode_a64_DP_2S&);
        void disassemble_a64_csel(uint64_t, const aarch64_decode_a64_COND_SEL&);
        void disassemble_a64_csinc(uint64_t, const aarch64_decode_a64_COND_SEL&);
        void disassemble_a64_csinv(uint64_t, const aarch64_decode_a64_COND_SEL&);
        void disassemble_a64_csneg(uint64_t, const aarch64_decode_a64_COND_SEL&);
        void disassemble_a64_drps(uint64_t, const aarch64_decode_a64_UB_REG&);
        void disassemble_a64_dup_elem(uint64_t, const aarch64_decode_a64_SIMD_COPY&);
        void disassemble_a64_dup_gen(uint64_t, const aarch64_decode_a64_SIMD_COPY&);
        void disassemble_a64_eor_vector(uint64_t, const aarch64_decode_a64_SIMD_THREE_SAME&);
        void disassemble_a64_eori(uint64_t, const aarch64_decode_a64_LOGICAL_IMM&);
        void disassemble_a64_eorsr(uint64_t, const aarch64_decode_a64_LOGICAL_SR&);
        void disassemble_a64_eret(uint64_t, const aarch64_decode_a64_UB_REG&);
        void disassemble_a64_exgen(uint64_t, const aarch64_decode_a64_EX_GEN&);
        void disassemble_a64_ext(uint64_t, const aarch64_decode_a64_SIMD_EXTRACT&);
        void disassemble_a64_extr(uint64_t, const aarch64_decode_a64_EXTRACT&);
        void disassemble_a64_fabd(uint64_t, const aarch64_decode_a64_SIMD_THREE_SAME&);
        void disassemble_a64_fabs(uint64_t, const aarch64_decode_a64_FP_DP_1&);
        void disassemble_a64_fadd(uint64_t, const aarch64_decode_a64_FP_DP_2&);
        void disassemble_a64_fccmpe(uint64_t, const aarch64_decode_a64_FP_CCMP&);
        void disassemble_a64_fcmgt_zero(uint64_t, const aarch64_decode_a64_SIMD_TWO_REG_MISC&);
        void disassemble_a64_fcmpe(uint64_t, const aarch64_decode_a64_FP_CMP&);
        void disassemble_a64_fcsel(uint64_t, const aarch64_decode_a64_FP_CSEL&);
        void disassemble_a64_fcvt(uint64_t, const aarch64_decode_a64_FP_DP_1&);
        void disassemble_a64_fcvtas_simd(uint64_t, const aarch64_decode_a64_SIMD_TWO_REG_MISC&);
        void disassemble_a64_fcvti(uint64_t, const aarch64_decode_a64_CVT_FP_I&);
        void disassemble_a64_fcvtz(uint64_t, const aarch64_decode_a64_CVT_FP_I&);
        void disassemble_a64_fcvtz_fxp(uint64_t, const aarch64_decode_a64_CVT_FP_FXP&);
        void disassemble_a64_fcvtzs_simd(uint64_t, const aarch64_decode_a64_SIMD_TWO_REG_MISC&);
        void disassemble_a64_fdiv(uint64_t, const aarch64_decode_a64_FP_DP_2&);
        void disassemble_a64_fdiv_vector(uint64_t, const aarch64_decode_a64_SIMD_THREE_SAME&);
        void disassemble_a64_fm(uint64_t, const aarch64_decode_a64_FP_DP_3&);
        void disassemble_a64_fmaxnmv(uint64_t, const aarch64_decode_a64_SIMD_ACROSS_LANES&);
        void disassemble_a64_fmaxv(uint64_t, const aarch64_decode_a64_SIMD_ACROSS_LANES&);
        void disassemble_a64_fminnmv(uint64_t, const aarch64_decode_a64_SIMD_ACROSS_LANES&);
        void disassemble_a64_fminv(uint64_t, const aarch64_decode_a64_SIMD_ACROSS_LANES&);
        void disassemble_a64_fmov(uint64_t, const aarch64_decode_a64_FP_DP_1&);
        void disassemble_a64_fmov_gen(uint64_t, const aarch64_decode_a64_CVT_FP_I&);
        void disassemble_a64_fmov_simd(uint64_t, const aarch64_decode_a64_SIMD_MOD_IMM&);
        void disassemble_a64_fmovi(uint64_t, const aarch64_decode_a64_FP_IMM&);
        void disassemble_a64_fmul(uint64_t, const aarch64_decode_a64_FP_DP_2&);
        void disassemble_a64_fmul_vector(uint64_t, const aarch64_decode_a64_SIMD_THREE_SAME&);
        void disassemble_a64_fneg(uint64_t, const aarch64_decode_a64_FP_DP_1&);
        void disassemble_a64_fnm(uint64_t, const aarch64_decode_a64_FP_DP_3&);
        void disassemble_a64_fnmul(uint64_t, const aarch64_decode_a64_FP_DP_2&);
        void disassemble_a64_frintx(uint64_t, const aarch64_decode_a64_FP_DP_1&);
        void disassemble_a64_fsqrt(uint64_t, const aarch64_decode_a64_FP_DP_1&);
        void disassemble_a64_fsub(uint64_t, const aarch64_decode_a64_FP_DP_2&);
        void disassemble_a64_fsub_vector(uint64_t, const aarch64_decode_a64_SIMD_THREE_SAME&);
        void disassemble_a64_hint(uint64_t, const aarch64_decode_a64_SYSTEM&);
        void disassemble_a64_ins_elem(uint64_t, const aarch64_decode_a64_SIMD_COPY&);
        void disassemble_a64_ins_gen(uint64_t, const aarch64_decode_a64_SIMD_COPY&);
        void disassemble_a64_ld1(uint64_t, const aarch64_decode_a64_SIMD_LS_MULT&);
        void disassemble_a64_ld1pi(uint64_t, const aarch64_decode_a64_SIMD_LS_MULT_PI&);
        void disassemble_a64_ld1r(uint64_t, const aarch64_decode_a64_SIMD_LS_SINGLE&);
        void disassemble_a64_ld1s(uint64_t, const aarch64_decode_a64_SIMD_LS_SINGLE&);
        void disassemble_a64_ld2(uint64_t, const aarch64_decode_a64_SIMD_LS_MULT&);
        void disassemble_a64_ld2pi(uint64_t, const aarch64_decode_a64_SIMD_LS_MULT_PI&);
        void disassemble_a64_ld3(uint64_t, const aarch64_decode_a64_SIMD_LS_MULT&);
        void disassemble_a64_ld3pi(uint64_t, const aarch64_decode_a64_SIMD_LS_MULT_PI&);
        void disassemble_a64_ld4(uint64_t, const aarch64_decode_a64_SIMD_LS_MULT&);
        void disassemble_a64_ld4pi(uint64_t, const aarch64_decode_a64_SIMD_LS_MULT_PI&);
        void disassemble_a64_ldar(uint64_t, const aarch64_decode_a64_LS_EX&);
        void disassemble_a64_ldarb(uint64_t, const aarch64_decode_a64_LS_EX&);
        void disassemble_a64_ldarh(uint64_t, const aarch64_decode_a64_LS_EX&);
        void disassemble_a64_ldaxp(uint64_t, const aarch64_decode_a64_LS_EX&);
        void disassemble_a64_ldaxr(uint64_t, const aarch64_decode_a64_LS_EX&);
        void disassemble_a64_ldaxrb(uint64_t, const aarch64_decode_a64_LS_EX&);
        void disassemble_a64_ldaxrh(uint64_t, const aarch64_decode_a64_LS_EX&);
        void disassemble_a64_ldnp(uint64_t, const aarch64_decode_a64_LS_NO_ALLOC&);
        void disassemble_a64_ldp(uint64_t, const aarch64_decode_a64_LS_REG_PAIR_OFF&);
        void disassemble_a64_ldp_simd(uint64_t, const aarch64_decode_a64_LS_REG_PAIR_OFF&);
        void disassemble_a64_ldpi(uint64_t, const aarch64_decode_a64_LS_REG_PAIR_IDX&);
        void disassemble_a64_ldpi_simd(uint64_t, const aarch64_decode_a64_LS_REG_PAIR_IDX&);
        void disassemble_a64_ldpsw(uint64_t, const aarch64_decode_a64_LS_REG_PAIR_OFF&);
        void disassemble_a64_ldpswi(uint64_t, const aarch64_decode_a64_LS_REG_PAIR_IDX&);
        void disassemble_a64_ldr(uint64_t, const aarch64_decode_a64_LS_REG_IMM_POST&);
        void disassemble_a64_ldr_lit(uint64_t, const aarch64_decode_a64_LOAD_REG_LIT&);
        void disassemble_a64_ldr_lit_simd(uint64_t, const aarch64_decode_a64_LOAD_REG_LIT&);
        void disassemble_a64_ldr_reg(uint64_t, const aarch64_decode_a64_LS_REG_REG_OFF&);
        void disassemble_a64_ldr_reg_simd(uint64_t, const aarch64_decode_a64_LS_REG_REG_OFF&);
        void disassemble_a64_ldrb(uint64_t, const aarch64_decode_a64_LS_REG_IMM_POST&);
        void disassemble_a64_ldrb_reg(uint64_t, const aarch64_decode_a64_LS_REG_REG_OFF&);
        void disassemble_a64_ldrbi(uint64_t, const aarch64_decode_a64_LS_REG_UIMM&);
        void disassemble_a64_ldrh(uint64_t, const aarch64_decode_a64_LS_REG_IMM_POST&);
        void disassemble_a64_ldrh_reg(uint64_t, const aarch64_decode_a64_LS_REG_REG_OFF&);
        void disassemble_a64_ldrhi(uint64_t, const aarch64_decode_a64_LS_REG_UIMM&);
        void disassemble_a64_ldri(uint64_t, const aarch64_decode_a64_LS_REG_UIMM&);
        void disassemble_a64_ldrsw(uint64_t, const aarch64_decode_a64_LS_REG_IMM_POST&);
        void disassemble_a64_ldrsw_lit(uint64_t, const aarch64_decode_a64_LOAD_REG_LIT&);
        void disassemble_a64_ldrswi(uint64_t, const aarch64_decode_a64_LS_REG_UIMM&);
        void disassemble_a64_ldtr(uint64_t, const aarch64_decode_a64_LS_REG_UNPRIV&);
        void disassemble_a64_ldtrb(uint64_t, const aarch64_decode_a64_LS_REG_UNPRIV&);
        void disassemble_a64_ldtrh(uint64_t, const aarch64_decode_a64_LS_REG_UNPRIV&);
        void disassemble_a64_ldtrsw(uint64_t, const aarch64_decode_a64_LS_REG_UNPRIV&);
        void disassemble_a64_ldur(uint64_t, const aarch64_decode_a64_LS_REG_USIMM&);
        void disassemble_a64_ldurb(uint64_t, const aarch64_decode_a64_LS_REG_USIMM&);
        void disassemble_a64_ldurh(uint64_t, const aarch64_decode_a64_LS_REG_USIMM&);
        void disassemble_a64_ldursw(uint64_t, const aarch64_decode_a64_LS_REG_USIMM&);
        void disassemble_a64_ldxp(uint64_t, const aarch64_decode_a64_LS_EX&);
        void disassemble_a64_ldxr(uint64_t, const aarch64_decode_a64_LS_EX&);
        void disassemble_a64_ldxrb(uint64_t, const aarch64_decode_a64_LS_EX&);
        void disassemble_a64_ldxrh(uint64_t, const aarch64_decode_a64_LS_EX&);
        void disassemble_a64_lslv(uint64_t, const aarch64_decode_a64_DP_2S&);
        void disassemble_a64_lsrv(uint64_t, const aarch64_decode_a64_DP_2S&);
        void disassemble_a64_madd(uint64_t, const aarch64_decode_a64_DP_3S&);
        void disassemble_a64_mla_vector(uint64_t, const aarch64_decode_a64_SIMD_THREE_SAME&);
        void disassemble_a64_mov(uint64_t, const aarch64_decode_a64_LOGICAL_SR&);
        void disassemble_a64_movi(uint64_t, const aarch64_decode_a64_SIMD_MOD_IMM&);
        void disassemble_a64_movk(uint64_t, const aarch64_decode_a64_MOVE_WIDE_IMM&);
        void disassemble_a64_movn(uint64_t, const aarch64_decode_a64_MOVE_WIDE_IMM&);
        void disassemble_a64_movz(uint64_t, const aarch64_decode_a64_MOVE_WIDE_IMM&);
        void disassemble_a64_mrs(uint64_t, const aarch64_decode_a64_SYSTEM&);
        void disassemble_a64_msr_imm(uint64_t, const aarch64_decode_a64_SYSTEM&);
        void disassemble_a64_msr_reg(uint64_t, const aarch64_decode_a64_SYSTEM&);
        void disassemble_a64_msr_sctlr(uint64_t, const aarch64_decode_a64_SYSTEM&);
        void disassemble_a64_msub(uint64_t, const aarch64_decode_a64_DP_3S&);
        void disassemble_a64_mul_idx_vector(uint64_t, const aarch64_decode_a64_SIMD_VECTOR_IDX&);
        void disassemble_a64_mul_vector(uint64_t, const aarch64_decode_a64_SIMD_THREE_SAME&);
        void disassemble_a64_mvni(uint64_t, const aarch64_decode_a64_SIMD_MOD_IMM&);
        void disassemble_a64_neg_simd(uint64_t, const aarch64_decode_a64_SIMD_TWO_REG_MISC&);
        void disassemble_a64_not_simd(uint64_t, const aarch64_decode_a64_SIMD_TWO_REG_MISC&);
        void disassemble_a64_orn_vector(uint64_t, const aarch64_decode_a64_SIMD_THREE_SAME&);
        void disassemble_a64_orr_vector(uint64_t, const aarch64_decode_a64_SIMD_THREE_SAME&);
        void disassemble_a64_orri(uint64_t, const aarch64_decode_a64_LOGICAL_IMM&);
        void disassemble_a64_orrsr(uint64_t, const aarch64_decode_a64_LOGICAL_SR&);
        void disassemble_a64_pmull(uint64_t, const aarch64_decode_a64_SIMD_THREE_DIFF&);
        void disassemble_a64_prfm(uint64_t, const aarch64_decode_a64_LS_REG_IMM_POST&);
        void disassemble_a64_prfm_lit(uint64_t, const aarch64_decode_a64_LOAD_REG_LIT&);
        void disassemble_a64_prfm_reg(uint64_t, const aarch64_decode_a64_LS_REG_REG_OFF&);
        void disassemble_a64_prfmi(uint64_t, const aarch64_decode_a64_LS_REG_UIMM&);
        void disassemble_a64_prfum(uint64_t, const aarch64_decode_a64_LS_REG_USIMM&);
        void disassemble_a64_rbit(uint64_t, const aarch64_decode_a64_DP_1S&);
        void disassemble_a64_ret(uint64_t, const aarch64_decode_a64_UB_REG&);
        void disassemble_a64_rev(uint64_t, const aarch64_decode_a64_DP_1S&);
        void disassemble_a64_rev16(uint64_t, const aarch64_decode_a64_DP_1S&);
        void disassemble_a64_rev32(uint64_t, const aarch64_decode_a64_DP_1S&);
        void disassemble_a64_rev32_simd(uint64_t, const aarch64_decode_a64_SIMD_TWO_REG_MISC&);
        void disassemble_a64_rev64_simd(uint64_t, const aarch64_decode_a64_SIMD_TWO_REG_MISC&);
        void disassemble_a64_rorv(uint64_t, const aarch64_decode_a64_DP_2S&);
        void disassemble_a64_saddl(uint64_t, const aarch64_decode_a64_SIMD_THREE_DIFF&);
        void disassemble_a64_saddlv(uint64_t, const aarch64_decode_a64_SIMD_ACROSS_LANES&);
        void disassemble_a64_saddw(uint64_t, const aarch64_decode_a64_SIMD_THREE_DIFF&);
        void disassemble_a64_sbc(uint64_t, const aarch64_decode_a64_ADD_SUB_CARRY&);
        void disassemble_a64_sbfm(uint64_t, const aarch64_decode_a64_BITFIELD&);
        void disassemble_a64_scvtf(uint64_t, const aarch64_decode_a64_CVT_FP_I&);
        void disassemble_a64_scvtf_simd(uint64_t, const aarch64_decode_a64_SIMD_TWO_REG_MISC&);
        void disassemble_a64_sdiv(uint64_t, const aarch64_decode_a64_DP_2S&);
        void disassemble_a64_shl_simd(uint64_t, const aarch64_decode_a64_SIMD_SHIFT_IMM&);
        void disassemble_a64_shll(uint64_t, const aarch64_decode_a64_SIMD_TWO_REG_MISC&);
        void disassemble_a64_smaddl(uint64_t, const aarch64_decode_a64_DP_3S&);
        void disassemble_a64_smax(uint64_t, const aarch64_decode_a64_SIMD_THREE_SAME&);
        void disassemble_a64_smaxv(uint64_t, const aarch64_decode_a64_SIMD_ACROSS_LANES&);
        void disassemble_a64_smin(uint64_t, const aarch64_decode_a64_SIMD_THREE_SAME&);
        void disassemble_a64_sminv(uint64_t, const aarch64_decode_a64_SIMD_ACROSS_LANES&);
        void disassemble_a64_smov(uint64_t, const aarch64_decode_a64_SIMD_COPY&);
        void disassemble_a64_smsubl(uint64_t, const aarch64_decode_a64_DP_3S&);
        void disassemble_a64_smulh(uint64_t, const aarch64_decode_a64_DP_3S&);
        void disassemble_a64_smull(uint64_t, const aarch64_decode_a64_SIMD_THREE_DIFF&);
        void disassemble_a64_sshl(uint64_t, const aarch64_decode_a64_SIMD_THREE_SAME&);
        void disassemble_a64_sshll(uint64_t, const aarch64_decode_a64_SIMD_SHIFT_IMM&);
        void disassemble_a64_sshr(uint64_t, const aarch64_decode_a64_SIMD_SHIFT_IMM&);
        void disassemble_a64_ssubl(uint64_t, const aarch64_decode_a64_SIMD_THREE_DIFF&);
        void disassemble_a64_ssubw(uint64_t, const aarch64_decode_a64_SIMD_THREE_DIFF&);
        void disassemble_a64_st1(uint64_t, const aarch64_decode_a64_SIMD_LS_MULT&);
        void disassemble_a64_st1pi(uint64_t, const aarch64_decode_a64_SIMD_LS_MULT_PI&);
        void disassemble_a64_st1s(uint64_t, const aarch64_decode_a64_SIMD_LS_SINGLE&);
        void disassemble_a64_st1spi(uint64_t, const aarch64_decode_a64_SIMD_LS_SINGLE_PI&);
        void disassemble_a64_st2(uint64_t, const aarch64_decode_a64_SIMD_LS_MULT&);
        void disassemble_a64_st2pi(uint64_t, const aarch64_decode_a64_SIMD_LS_MULT_PI&);
        void disassemble_a64_st3(uint64_t, const aarch64_decode_a64_SIMD_LS_MULT&);
        void disassemble_a64_st3pi(uint64_t, const aarch64_decode_a64_SIMD_LS_MULT_PI&);
        void disassemble_a64_st4(uint64_t, const aarch64_decode_a64_SIMD_LS_MULT&);
        void disassemble_a64_st4pi(uint64_t, const aarch64_decode_a64_SIMD_LS_MULT_PI&);
        void disassemble_a64_stlr(uint64_t, const aarch64_decode_a64_LS_EX&);
        void disassemble_a64_stlrb(uint64_t, const aarch64_decode_a64_LS_EX&);
        void disassemble_a64_stlrh(uint64_t, const aarch64_decode_a64_LS_EX&);
        void disassemble_a64_stlxp(uint64_t, const aarch64_decode_a64_LS_EX&);
        void disassemble_a64_stlxr(uint64_t, const aarch64_decode_a64_LS_EX&);
        void disassemble_a64_stlxrb(uint64_t, const aarch64_decode_a64_LS_EX&);
        void disassemble_a64_stlxrh(uint64_t, const aarch64_decode_a64_LS_EX&);
        void disassemble_a64_stnp(uint64_t, const aarch64_decode_a64_LS_NO_ALLOC&);
        void disassemble_a64_stp(uint64_t, const aarch64_decode_a64_LS_REG_PAIR_OFF&);
        void disassemble_a64_stp_simd(uint64_t, const aarch64_decode_a64_LS_REG_PAIR_OFF&);
        void disassemble_a64_stpi(uint64_t, const aarch64_decode_a64_LS_REG_PAIR_IDX&);
        void disassemble_a64_stpi_simd(uint64_t, const aarch64_decode_a64_LS_REG_PAIR_IDX&);
        void disassemble_a64_str(uint64_t, const aarch64_decode_a64_LS_REG_IMM_POST&);
        void disassemble_a64_str_reg(uint64_t, const aarch64_decode_a64_LS_REG_REG_OFF&);
        void disassemble_a64_str_reg_simd(uint64_t, const aarch64_decode_a64_LS_REG_REG_OFF&);
        void disassemble_a64_strb(uint64_t, const aarch64_decode_a64_LS_REG_IMM_POST&);
        void disassemble_a64_strb_reg(uint64_t, const aarch64_decode_a64_LS_REG_REG_OFF&);
        void disassemble_a64_strbi(uint64_t, const aarch64_decode_a64_LS_REG_UIMM&);
        void disassemble_a64_strh(uint64_t, const aarch64_decode_a64_LS_REG_IMM_POST&);
        void disassemble_a64_strh_reg(uint64_t, const aarch64_decode_a64_LS_REG_REG_OFF&);
        void disassemble_a64_strhi(uint64_t, const aarch64_decode_a64_LS_REG_UIMM&);
        void disassemble_a64_stri(uint64_t, const aarch64_decode_a64_LS_REG_UIMM&);
        void disassemble_a64_sttr(uint64_t, const aarch64_decode_a64_LS_REG_UNPRIV&);
        void disassemble_a64_sttrb(uint64_t, const aarch64_decode_a64_LS_REG_UNPRIV&);
        void disassemble_a64_sttrh(uint64_t, const aarch64_decode_a64_LS_REG_UNPRIV&);
        void disassemble_a64_stur(uint64_t, const aarch64_decode_a64_LS_REG_USIMM&);
        void disassemble_a64_sturb(uint64_t, const aarch64_decode_a64_LS_REG_USIMM&);
        void disassemble_a64_sturh(uint64_t, const aarch64_decode_a64_LS_REG_USIMM&);
        void disassemble_a64_stxp(uint64_t, const aarch64_decode_a64_LS_EX&);
        void disassemble_a64_stxr(uint64_t, const aarch64_decode_a64_LS_EX&);
        void disassemble_a64_stxrb(uint64_t, const aarch64_decode_a64_LS_EX&);
        void disassemble_a64_stxrh(uint64_t, const aarch64_decode_a64_LS_EX&);
        void disassemble_a64_sub_ereg(uint64_t, const aarch64_decode_a64_ADD_SUB_EREG&);
        void disassemble_a64_sub_sreg(uint64_t, const aarch64_decode_a64_ADD_SUB_SREG&);
        void disassemble_a64_sub_vector(uint64_t, const aarch64_decode_a64_SIMD_THREE_SAME&);
        void disassemble_a64_subi(uint64_t, const aarch64_decode_a64_ADD_SUB_IMM&);
        void disassemble_a64_sys(uint64_t, const aarch64_decode_a64_SYSTEM&);
        void disassemble_a64_tbl(uint64_t, const aarch64_decode_a64_SIMD_TABLE_LOOKUP&);
        void disassemble_a64_tbx(uint64_t, const aarch64_decode_a64_SIMD_TABLE_LOOKUP&);
        void disassemble_a64_tbz(uint64_t, const aarch64_decode_a64_TEST_B_IMM&);
        void disassemble_a64_uadalp(uint64_t, const aarch64_decode_a64_SIMD_TWO_REG_MISC&);
        void disassemble_a64_uaddl(uint64_t, const aarch64_decode_a64_SIMD_THREE_DIFF&);
        void disassemble_a64_uaddlp(uint64_t, const aarch64_decode_a64_SIMD_TWO_REG_MISC&);
        void disassemble_a64_uaddlv(uint64_t, const aarch64_decode_a64_SIMD_ACROSS_LANES&);
        void disassemble_a64_uaddw(uint64_t, const aarch64_decode_a64_SIMD_THREE_DIFF&);
        void disassemble_a64_ubfm(uint64_t, const aarch64_decode_a64_BITFIELD&);
        void disassemble_a64_ucvtf(uint64_t, const aarch64_decode_a64_CVT_FP_I&);
        void disassemble_a64_ucvtf_simd(uint64_t, const aarch64_decode_a64_SIMD_TWO_REG_MISC&);
        void disassemble_a64_udiv(uint64_t, const aarch64_decode_a64_DP_2S&);
        void disassemble_a64_umaddl(uint64_t, const aarch64_decode_a64_DP_3S&);
        void disassemble_a64_umaxv(uint64_t, const aarch64_decode_a64_SIMD_ACROSS_LANES&);
        void disassemble_a64_uminv(uint64_t, const aarch64_decode_a64_SIMD_ACROSS_LANES&);
        void disassemble_a64_umov(uint64_t, const aarch64_decode_a64_SIMD_COPY&);
        void disassemble_a64_umsubl(uint64_t, const aarch64_decode_a64_DP_3S&);
        void disassemble_a64_umulh(uint64_t, const aarch64_decode_a64_DP_3S&);
        void disassemble_a64_umull(uint64_t, const aarch64_decode_a64_SIMD_THREE_DIFF&);
        void disassemble_a64_ushl(uint64_t, const aarch64_decode_a64_SIMD_THREE_SAME&);
        void disassemble_a64_ushll(uint64_t, const aarch64_decode_a64_SIMD_SHIFT_IMM&);
        void disassemble_a64_ushr(uint64_t, const aarch64_decode_a64_SIMD_SHIFT_IMM&);
        void disassemble_a64_usubl(uint64_t, const aarch64_decode_a64_SIMD_THREE_DIFF&);
        void disassemble_a64_usubw(uint64_t, const aarch64_decode_a64_SIMD_THREE_DIFF&);
        void disassemble_a64_uzp1(uint64_t, const aarch64_decode_a64_SIMD_PERMUTE&);
        void disassemble_a64_uzp2(uint64_t, const aarch64_decode_a64_SIMD_PERMUTE&);
        void disassemble_a64_vldr(uint64_t, const aarch64_decode_a64_LS_REG_UIMM&);
        void disassemble_a64_vldur(uint64_t, const aarch64_decode_a64_LS_REG_USIMM&);
        void disassemble_a64_vstr(uint64_t, const aarch64_decode_a64_LS_REG_UIMM&);
        void disassemble_a64_vstur(uint64_t, const aarch64_decode_a64_LS_REG_USIMM&);
        void disassemble_a64_xtn(uint64_t, const aarch64_decode_a64_SIMD_TWO_REG_MISC&);
      }
      ;
    }
  }
}
#endif
